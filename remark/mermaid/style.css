/* Don't panic, Mermaid scopes all styles to the parent SVG ID */

* {
  /* https://github.com/mermaid-js/mermaid/blob/v10.1.0/packages/mermaid/src/diagrams/gantt/styles.js#L3-L6 */
  --mermaid-font-family: Roboto, 'Helvetica Neue', HelveticaNeue, Helvetica,
    Arial, sans-serif;
  --mermaid-font-size: 14px;

  /* https://github.com/mermaid-js/mermaid/blob/8.11.5/src/diagrams/er/erRenderer.js#L405-L406 */
  --mermaid-er-label-fill: rgba(255, 255, 255, 0.85);

  /* https://github.com/seek-oss/braid-design-system/blob/v31.14.0/lib/color/palette.ts */
  --braid-blue-100: #e3f2fb;
  --braid-blue-300: #98c9f1;
  --braid-blue-700: #1d559d;
  --braid-grey-50: #f7f8fb;
  --braid-grey-100: #eaecf1;
  --braid-grey-300: #abb3c1;
  --braid-grey-500: #5a6881;
  --braid-mint-100: #e2f7f1;
  --braid-mint-300: #8bdec5;
  --braid-mint-700: #12784f;
  --braid-red-300: #fb999a;
  --braid-red-700: #b91e1e;
  --braid-yellow-100: #fef8de;
  --braid-yellow-500: #fdc221;
}

/* shared */

body,
text {
  font-family: var(--mermaid-font-family);
  font-size: var(--mermaid-font-size);
}

/* er */

path.er.entityBox {
  fill: var(--braid-grey-50);
  stroke: var(--braid-grey-100);
}

path.er.relationshipLabelBox {
  fill: var(--mermaid-er-label-fill);
}

path.er.relationshipLine {
  fill: none;
  stroke: var(--braid-grey-500);
}

text.er {
  dominant-baseline: central;
  text-anchor: middle;
}

/* flowchart v2 */

/* subgraphs */
g.cluster path,
g.cluster rect {
  fill: none;
  stroke: var(--braid-grey-300);
}

.edge-thickness-normal {
  stroke-width: 1px;
}

g.cluster div,
g.edgeLabel foreignObject,
g.edgeLabel span.edgeLabel,
g.label div,
g.node div,
g.node span.nodeLabel {
  font-family: var(--mermaid-font-family);
  font-size: var(--mermaid-font-size);
}

g.node foreignObject.label {
  overflow-y: visible;
}

g.edgeLabel foreignObject,
g.label foreignObject {
  overflow-x: visible;
}

.edgeLabel div {
  background-color: var(--mermaid-er-label-fill);
}

.edgeLabel span.edgeLabel {
  background-color: transparent;
}

circle.label-container,
.node circle,
.node path,
.node polygon,
.node rect {
  fill: var(--braid-grey-50);
  stroke: var(--braid-grey-100);
}

.node div {
  text-align: center;
}

.label div,
.nodeLabel {
  display: block;
  white-space: nowrap;
}

.edgePath path.path,
.edgePaths path.transition {
  fill: none;
  stroke: var(--braid-grey-500);
}

.edgePath marker path.arrowheadPath,
path.arrowMarkerPath {
  fill: var(--braid-grey-500);
}

/* gantt */

g.grid > g.tick > path,
rect.task {
  stroke-width: 1px;
}

g.grid > g.tick > path {
  color: var(--braid-grey-100);
  shape-rendering: crispEdges;
}

g.grid > g.tick > text,
text.sectionTitle {
  fill: var(--braid-grey-500);
}

path.section0,
path.section1 {
  fill: none;
}

rect.task.active0 {
  fill: var(--braid-grey-50);
  stroke: var(--braid-grey-300);
}

rect.task.active1 {
  fill: var(--braid-blue-100);
  stroke: var(--braid-blue-300);
}

rect.task.done0,
rect.task.done1 {
  fill: var(--braid-mint-100);
  stroke: var(--braid-mint-300);
}

rect.task.milestone {
  fill: var(--braid-blue-700);
  stroke: var(--braid-blue-300);
}

rect.task.milestone.crit0,
rect.task.milestone.crit1 {
  fill: var(--braid-red-700);
  stroke: var(--braid-red-300);
}

rect.task.milestone.done0,
rect.task.milestone.done1 {
  fill: var(--braid-mint-700);
  stroke: var(--braid-mint-300);
}

text.sectionTitle {
  /* https://github.com/mermaid-js/mermaid/blob/v10.1.0/packages/mermaid/src/diagrams/gantt/ganttRenderer.js#L671 */
  transform: translateX(-10px);
}

text.taskText.activeText0,
text.taskTextOutside0.activeText0,
text.taskTextOutside1.activeText0 {
  fill: var(--braid-grey-500) !important;
}

text.taskText.activeText1,
text.taskTextOutside0.activeText1,
text.taskTextOutside1.activeText1,
text.taskTextOutside0.milestoneText,
text.taskTextOutside1.milestoneText {
  fill: var(--braid-blue-700) !important;
}

text.taskText.doneText0,
text.taskText.doneText1,
text.taskTextOutside0.doneText0,
text.taskTextOutside0.doneText1,
text.taskTextOutside1.doneText0,
text.taskTextOutside1.doneText1 {
  fill: var(--braid-mint-700) !important;
}

text.taskTextOutside0.milestoneText.critText0,
text.taskTextOutside0.milestoneText.critText1,
text.taskTextOutside1.milestoneText.critText0,
text.taskTextOutside1.milestoneText.critText1 {
  fill: var(--braid-red-700) !important;
}

/* sequence */

text.actor,
text.messageText {
  font-family: var(--mermaid-font-family);
  font-size: var(--mermaid-font-size);
  stroke: none;
  text-anchor: middle;
}

rect.actor {
  fill: var(--braid-grey-50);

  stroke: var(--braid-grey-100);
}

text.sequenceNumber {
  fill: var(--braid-grey-50);

  font-size: 12px;
}

path.labelBox {
  fill: var(--braid-yellow-100);
}

path.labelBox,
path.loopLine {
  stroke: var(--braid-yellow-500);
  stroke-dasharray: none;
}

path.actor-line,
path.messageLine0,
path.path {
  fill: none;
  stroke: var(--braid-grey-500);
}

#arrowhead > path,
#crosshead > path,
#sequencenumber {
  fill: var(--braid-grey-500);
  stroke: none;
}

path.actor-line {
  stroke-dasharray: 4;
}

rect.activation0 {
  fill: var(--braid-grey-100);
  stroke: var(--braid-grey-300);
}

rect.note {
  fill: var(--braid-yellow-100);
  stroke: var(--braid-yellow-500);
}
